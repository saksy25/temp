
Question:
You are given two strings, s1 and s2. Your task is to count the number of substrings of s1 that contain either s2 or its reverse as a substring.

Input:
s1 = abcba
s2 = ab

Output:
7
The substrings of "abcba" that contain "ab" or "ba" are:
"ab", "abc", "abcb", "abcba", "cba", "bcba", "ba"

Code: 
import java.util.*;

public class SubstringCounter {

    public static int countSubstringsContaining(String s1, String s2) {
        int n = s1.length();
        int count = 0;
        List<String> substrings = new ArrayList<>();

        String reversedS2 = new StringBuilder(s2).reverse().toString();

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j <= n; j++) {
                String substring = s1.substring(i, j);
                if (substring.contains(s2) || substring.contains(reversedS2)) {
                    substrings.add(substring);
                    count++;
                }
            }
        }

        // Print matching substrings
        System.out.println("Matching substrings:");
        for (String str : substrings) {
            System.out.println(str);
        }

        return count;
    }

    public static void main(String[] args) {
        String s1 = "aabcbaacaab";
        String s2 = "aab";
        int result = countSubstringsContaining(s1, s2);
        System.out.println("Count of substrings containing \"" + s2 + "\" or its reverse: " + result);
    }
}
